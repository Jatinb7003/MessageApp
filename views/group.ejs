<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=z, initial-scale=1.0">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <title></title>
    <style>
        * {
            padding: 0%;
            margin: 0%;
            background-color: rgb(210, 218, 224);
        }

        #groupList::-webkit-scrollbar {
            width: 0.5em;
        }

        #groupList::-webkit-scrollbar-thumb {
            background-color: transparent;
        }

        body {
            overflow: hidden;
            padding-bottom: 100px;
        }

        #popup-btn {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
        }

        #popup {
            display: none;
            position: relative;
            border-radius: 15px;
            /* flex-direction: column; */
            top: 60%;
            left: 30%;
            width: 25%;
            height: 60%;
            transform: translate(-50%, -50%);
            /* background-color: #fff; */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            z-index: 1;
        }

        #requestList li {
            /* overflow: scroll; */
            height: 10px;
        }

        #close-btn {
            cursor: pointer;
            color: #333;
            font-weight: bold;
            float: right;
        }

        .div-box li {
            padding: 20px;
        }

        #popupParent {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            /* padding: 20px; */
            /* border-radius: 5px; */
            /* text-align: center; */
        }

        h1 {
            background-color: red;
            text-align: center;
            padding-top: 15px;
            padding-bottom: 15px;
            font-size: 40px;
        }

        #outer {
            display: flex;
            justify-content: end;
        }

        #inner1 {
            width: 45%;
            height: 450px;
            border-right: 2px solid black;
            /* display: inline-block; */
            float: left;
            overflow-y: scroll;
        }

        #inner1 span {
            margin-top: 5px;
            margin-left: 10px;
        }

        #inner11 {
            display: none;
            width: 45%;
            height: 700px;
            border-right: 2px solid black;
            float: left;
        }

        #postList li{
            height: 50px;
            border-bottom: 0.5px solid white;
            
        }
        #postList{
            margin-bottom: 10px;
        }
        #inner2 {
            width: 60%;
            height: 510px;
            display: none;
            /* float:right ; */
        }

        #inner22 {
            width: 60%;
            height: 510px;
            display: block;
            /* width: 60%; */
            /* float: right; */
        }

        #inner222 {
            width: 60%;
            height: 510px;
            display: none;
        }

        #groupList li {
            list-style: none;
            cursor: pointer;
            line-height: 50px;
            font-weight: bold;
            /* transition: all .3s ease-in-out; */
            border-bottom: 0.5px solid white;
            border-radius: 5px;
            /* background-color: antiquewhite; */
            font-size: 40px;
            padding-left: 10px;
            /* padding-right: 15px; */
            /* overflow-y: scroll; */
        }

        #groupList li:hover {
            background-color: black;
            color: aliceblue;
        }

        #groupList span {
            margin-right: 20px;
        }

        #requestList li {
            padding: 20px 0px 0px 5px;
            display: flex;
            /* justify-content: space-evenly; */
        }

        #requestList li h3,
        p {
            width: 100px;
        }

        #requestList li h3,
        p,
        span {
            padding-left: 10px;
        }

        span,
        button {
            border-radius: 5px;
        }
    </style>
</head>

<body>
    <div>
        <h1>Message App <button style="position: relative;left: 35%;" id="logout"><span
                    class="material-symbols-outlined">
                    logout
                </span></button></h1>
        <div
            style="margin-top: 5px; background-color: aliceblue;position: sticky;width: 42.8%;border-right: 2px solid black;">
            <span style="font-size: 40px;background-color: transparent;" class="material-symbols-outlined">groups</span>
            <input style="margin-bottom: 20px;border-radius: 10px;text-align: center;" type="text"
                placeholder="Search group here" name="searchGroup" id="searchGroup">
            <button style="background-color: transparent;border: none;" id="addGroup"><span
                    style="background-color: transparent;" class="material-symbols-outlined">group_add</span></button>
            <button id="popup-btn">Requests</button>

        </div>
        <div id="outer">
            <div id="inner1">
                <ul style="overflow: scroll;" id="groupList">
                </ul>
            </div>
            <div id="inner11">
                <p style="font-size: 50px;text-align: center;">Create New Group</p>
                <input type="text" name="newGroup" placeholder="Enter group name" id="newGroup">
                <button id="createGroup"><span class="material-symbols-outlined">check_circle</span></button>
            </div>
            <div id="inner2">
                <div
                    style="position: relative;top: -65px;display: flex;background-color: aliceblue;height:68px;justify-content:space-evenly;">
                    <span style="height: 40px;background-color: transparent;"
                        class="material-symbols-outlined">group</span>
                    <p id="heading"
                        style="font-size: 40px;font-weight: 600;height: 40px;background-color: transparent;"></p>
                    <input style="border-radius: 10px;text-align: center;height: 20px;background-color: transparent;"
                        type="text" name="searchPost" id="searchPost" placeholder="Search post here">
                    <button style="height: 40px;background-color: transparent;border: none;">
                        <span id="inviteUser" style="cursor: pointer;background-color: transparent;"
                            class="material-symbols-outlined">
                            person_add
                        </span>
                    </button>
                </div>

                <div id="postDiv" style="overflow: scroll ;height:360px;position: relative;top: -60px;">
                    <ul id="postList">
                    </ul>
                </div>

                <div
                    style="background-color: aliceblue;height: 90px;align-items: center;position: relative;top: -78px;padding-left: 20%;">
                    <textarea rows="" cols="50" placeholder="Enter here..."
                        style="border-radius: 10px;resize: none; position: relative;top: 10px; height: 50px;font-size: 15px;"
                        type="text" name="newPost" id="newPost"></textarea>
                    <span id="sendPost"
                        style="cursor: pointer;position: relative;top: 15px; font-size: 40px; background-color: transparent;"
                        class="material-symbols-outlined">
                        send
                    </span>
                </div>
            </div>
            <div id="inner22">
                <p style="font-size: 50px; font-weight: 800;text-align: center;padding-top: 20%;width: max-content;">
                    Posts of Groups are
                    shown here.</p>
            </div>
            <div id="inner222">
                <h2>Invite User</h2>
                <input style="border-radius: 5px;" type="text" placeholder="Enter Username..." name="inviteNewUser"
                    id="inviteNewUser">
                <span id="inviteButton" style="cursor: pointer;" class="material-symbols-outlined">
                    send
                </span>
                <p id="error" style="display: none;"></p>
            </div>
        </div>
    </div>
    <div id="popupParent">
        <div id="popup">
            <span id="close-btn"> &times;</span>
            <ul id="requestList">
            </ul>
        </div>
    </div>
</body>
<script>
    const addGroup = document.getElementById('addGroup');
    const div1 = document.getElementById('inner1');
    const div11 = document.getElementById('inner11');
    const div2 = document.getElementById('inner2');
    const div22 = document.getElementById('inner22');
    const div222 = document.getElementById('inner222');
    const createGroup = document.getElementById('createGroup');
    const groupList = document.getElementById('groupList');
    const p = document.getElementById('heading');
    const inviteUser = document.getElementById('inviteUser');
    const inviteNewUser = document.getElementById('inviteNewUser');
    const inviteButton = document.getElementById('inviteButton');
    const sendPost = document.getElementById('sendPost');
    let info;
    const popupBtn = document.getElementById('popup-btn');
    const popup = document.getElementById('popup');
    const popupParent = document.getElementById('popupParent');
    const closeBtn = document.getElementById('close-btn');
    const requestList = document.getElementById('requestList');
    // const RequestListL=document.getElementById('RequestListLi');
    const postList=document.getElementById("postList");
    const logout = document.getElementById("logout");
    const postDiv=document.getElementById("postDiv");

    logout.addEventListener('click', () => {
        fetch('/logout')
            .then((res) => {
                if (res.status === 200) {
                    window.location.href = '/';
                }
            })
            .then((error) => {
                alert(error);
            })
    })

    postDiv.addEventListener('scroll',()=>{
        console.log(postDiv.scrollTop);
    })

    // popupParent.addEventListener('click',()=>{
    //     popup.style.display = 'none';
    //     popupParent.style.display='none';
    // })

    popupBtn.addEventListener('click', () => {
        popup.style.display = 'block';
        popupParent.style.display = 'block';
        fetch('/getRequests')
            .then((res) => {
                if (res.status === 200) {
                    return res.json();
                }
                else {
                    throw new error("Something went wrong");
                }
            })
            .then((requests) => {
                if (requests.length) {
                    requests.forEach((req) => {
                        console.log(req)
                        let li = document.createElement('li');
                        li.innerHTML = `<span style="height: 40px;background-color: transparent;" class="material-symbols-outlined">group</span>
                     <h3>${req.name}</h3>
                     <p>${req.from_}</p>`
                        let s1 = document.createElement('span');
                        let s2 = document.createElement('span');
                        s1.classList.add('material-symbols-outlined')
                        s2.classList.add('material-symbols-outlined')
                        s1.innerText = "done";
                        s2.innerText = 'close';
                        li.appendChild(s1);
                        li.appendChild(s2);
                        requestList.appendChild(li);
                        s1.addEventListener('click', () => {
                            fetch('/acceptReq', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ groupId: req.groupId, time: Date.now(), from: req.from_ }) })
                                .then((res) => {
                                    if (res.status === 200) {
                                        requestList.removeChild(li);
                                        if (requestList.childElementCount) {
                                            let li = document.createElement('li');
                                            li.innerHTML = `No Pending Request`;
                                            requestList.appendChild(li);
                                        }
                                    }
                                })
                                .catch((error) => {
                                    alert(error);
                                })
                        })
                        s2.addEventListener('click', () => {
                            fetch('/rejectReq', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ groupId: req.groupId, time: Date.now(), from: req.from_ }) })
                                .then((res) => {
                                    if (res.status === 200) {
                                        requestList.removeChild(li);
                                        if (requestList.childElementCount) {
                                            let li = document.createElement('li');
                                            li.innerHTML = `No Pending Request`;
                                            requestList.appendChild(li);
                                        }
                                    }
                                })
                                .catch((error) => {
                                    alert(error);
                                })
                        })
                    })
                }
                else {
                    console.log(1)
                    let li = document.createElement('li');
                    li.innerHTML = `No Pending Request`;
                    requestList.appendChild(li);
                }
            })
            .catch((error) => {
                alert(error);
            })
    });

    closeBtn.addEventListener('click', () => {
        popup.style.display = 'none';
        popupParent.style.display = 'none';
        requestList.innerHTML = "";
    });

    addGroupToDom();

    addGroup.addEventListener('click', () => {
        div1.style.display = 'none';
        div11.style.display = 'block';
    })

    inviteUser.addEventListener('click', () => {
        div2.style.display = 'none';
        div22.style.display = 'none';
        div222.style.display = 'block';
    })


    createGroup.addEventListener('click', () => {
        let groupName = document.getElementById('newGroup');
        if (groupName.value && groupName.value.trim()) {
            fetch('/createGroup', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ name: groupName.value, time: Date.now() }) })
                .then((res) => {
                    if (res.status === 200) {
                        div1.style.display = 'block';
                        div11.style.display = 'none';
                        groupName.value = '';
                        groupList.innerHTML='';
                        addGroupToDom();
                    }
                    else {
                        throw new error('Something went wrong');
                    }
                })
                .catch((error) => {
                    alert(error);
                })
        }
        else {
            alert('Enter a group name.')
        }
    })

    function getGroups(callback) {
        fetch('/getGroups')
            .then((res) => {
                if (res.status === 200) {
                    return res.json();
                }
                else {
                    throw new error("Something went wrong!");
                }
            })
            .then((groups) => {
                // console.log(groups)
                callback(groups, null);
            })
            .catch((error) => {
                callback(null, error);
            })
    }

    sendPost.addEventListener('click', () => {
        let newPost = document.getElementById('newPost');
        console.log(newPost.value)
        if (newPost.value && newPost.value.trim()) {
            fetch('/addNewPost', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ message: newPost.value, groupId: info, time: Date.now() }) })
                .then((res) => {
                    if (res.status === 200) {
                        newPost.value = '';
                        getMessages(info,putMsg);
                    }
                    else {
                        alert('Error in sending post');
                    }
                })
                .catch((error) => {
                    alert("Something went wrong!");
                })
        }
        else {
            alert("Please enter some text");
        }
    })

    function addGroupToDom() {
        getGroups((groups, error) => {
            // console.log(groups)
            groups.forEach(group => {
                let li = document.createElement('li');
                let span = document.createElement('span');
                span.classList.add('material-symbols-outlined');
                span.innerText = 'group';
                li.innerHTML = `<span style="background-color: transparent;" class="material-symbols-outlined">group</span> ${group.name}`;
                groupList.appendChild(li);
                li.addEventListener('click', () => {
                    fetch('/checkAdmin', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ id: group.id }) })
                        .then((res) => {
                            if (res.status === 200) {
                                inviteUser.style.display = 'block';
                            }
                            else if (res.status === 300) {
                                throw new error("Something went wrong");
                            }
                            else {
                                inviteUser.style.display = 'none';
                            }
                            postList.innerHTML='';
                            getMessages(group.id,putMsg);
                            info = group.id;
                            p.innerText = group.name;
                            div2.style.display = 'block';
                            div22.style.display = 'none';
                            div222.style.display = 'none';
                            inviteButton.addEventListener('click', () => {
                                let username = inviteNewUser.value;
                                let p = document.getElementById('error');
                                if (/^[a-z0-9_]+$/.test(username) && username.trim()) {
                                    fetch('/sentRequest', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ to: username, time: Date.now(), groupId: group.id }) })
                                        .then((res) => {
                                            if (res.status === 200) {
                                                alert(`Invitation sent successfully to '${username}'`);
                                                p.innerText = group.name;
                                                div2.style.display = 'block';
                                                div22.style.display = 'none';
                                                div222.style.display = 'none';
                                                username.value = '';
                                            }
                                            else if (300) {
                                                alert("User not exist");
                                                username.value = '';
                                            }
                                            else {
                                                throw new error('Something went wrong!');
                                            }
                                        })
                                        .catch((error) => {
                                            alert(error);
                                            username.value = '';
                                        })
                                }
                                else {
                                    p.innerText = 'Invalid Username';
                                    p.style.display = 'block';
                                }
                            })
                        })
                        .catch((error) => {
                            alert(error);
                        })
                })
            });
        });
    }

    function getMessages(groupId,callback) {
        console.log(groupId)
        fetch('/getMessages', { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ groupId: groupId }) })
            .then((res) => {
                if (res.status === 200) {
                    return res.json();
                }
            })
            .then((messages) => {
                console.log(messages)
                callback(messages);
            })
            .catch((error) => {
                alert("Something went wrong!");
            })
    }

    function putMsg(messages){
                                 // messages.data
                                // console.log(messages);
                                messages.data.forEach(msg=>{
                                    let li=document.createElement("li");
                                    let p=document.createElement("p");
                                    let name=document.createElement('h3');
                                    let date=document.createElement('p');
                                    if(msg.userId===messages.user)
                                    {
                                        name.innerText="You";
                                    }
                                    else
                                    {
                                        name.innerText=msg.userId;
                                    }
                                    li.appendChild(name);
                                    p.innerText=msg.message;
                                    li.appendChild(p);
                                    postList.appendChild(li);
                                    postDiv.scrollTop=500;
                                })
                            }

</script>

</html>